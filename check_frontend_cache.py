#!/usr/bin/env python3
"""
Script para verificar se o frontend est√° usando a URL correta
"""

import requests
import re

def check_frontend_url():
    """Verifica se o frontend est√° usando a URL correta"""
    print("üîç Verificando configura√ß√£o do frontend...")
    
    try:
        # Acessar o frontend
        response = requests.get("https://finaflow.vercel.app", timeout=10)
        
        if response.status_code == 200:
            print("‚úÖ Frontend acess√≠vel")
            
            # Procurar por URLs de API no c√≥digo fonte
            content = response.text
            
            # Padr√µes para URLs de API
            http_patterns = [
                r'http://finaflow-backend-609095880025\.us-central1\.run\.app',
                r'http://[^"\']*\.a\.run\.app',
            ]
            
            https_patterns = [
                r'https://finaflow-backend-609095880025\.us-central1\.run\.app',
                r'https://[^"\']*\.a\.run\.app',
            ]
            
            # Verificar URLs HTTP (problem√°ticas)
            http_urls = []
            for pattern in http_patterns:
                matches = re.findall(pattern, content)
                http_urls.extend(matches)
            
            # Verificar URLs HTTPS (corretas)
            https_urls = []
            for pattern in https_patterns:
                matches = re.findall(pattern, content)
                https_urls.extend(matches)
            
            print(f"\nüìä Resultado da an√°lise:")
            print(f"   URLs HTTP encontradas: {len(http_urls)}")
            print(f"   URLs HTTPS encontradas: {len(https_urls)}")
            
            if http_urls:
                print(f"   ‚ùå PROBLEMA: URLs HTTP encontradas:")
                for url in set(http_urls):
                    print(f"      - {url}")
                print(f"   üí° SOLU√á√ÉO: For√ßar redeploy do frontend no Vercel")
                return False
            elif https_urls:
                print(f"   ‚úÖ URLs HTTPS encontradas:")
                for url in set(https_urls):
                    print(f"      - {url}")
                print(f"   ‚úÖ Configura√ß√£o parece correta")
                return True
            else:
                print(f"   ‚ö†Ô∏è  Nenhuma URL de API encontrada no c√≥digo fonte")
                return True
                
        else:
            print(f"‚ùå Frontend n√£o acess√≠vel: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao acessar frontend: {e}")
        return False

def provide_solution():
    """Fornece a solu√ß√£o para o problema"""
    print("\nüîß SOLU√á√ÉO PARA O PROBLEMA:")
    print("=" * 50)
    print("O frontend est√° usando uma vers√£o em cache com URLs HTTP")
    print("\nüìã PASSOS PARA CORRIGIR:")
    print("1. Acesse: https://vercel.com/dashboard")
    print("2. Clique no projeto 'finaflow'")
    print("3. V√° em 'Deployments'")
    print("4. Clique em 'Redeploy' no √∫ltimo deployment")
    print("5. Aguarde o deploy completar")
    print("6. Teste novamente no navegador")
    print("\nüîÑ Alternativa - Commit vazio:")
    print("git commit --allow-empty -m 'force redeploy'")
    print("git push origin main")

def main():
    print("üöÄ Verifica√ß√£o do Frontend - finaFlow")
    print("=" * 50)
    
    is_correct = check_frontend_url()
    provide_solution()
    
    if not is_correct:
        print("\n‚ùå PROBLEMA CONFIRMADO: Frontend usando URLs HTTP")
        print("   Execute os passos acima para corrigir")
    else:
        print("\n‚úÖ Frontend parece estar configurado corretamente")

if __name__ == "__main__":
    main()
