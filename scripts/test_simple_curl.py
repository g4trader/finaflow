#!/usr/bin/env python3
"""
Teste simples com curl para verificar prote√ß√£o de rotas
"""

import requests
import time

def test_route_protection():
    """Testa prote√ß√£o de rotas com requests"""
    base_url = "https://finaflow.vercel.app"
    
    print("üîç TESTE SIMPLES DE PROTE√á√ÉO DE ROTAS")
    print("=" * 50)
    
    # Teste 1: Dashboard sem autentica√ß√£o
    print("\n1Ô∏è‚É£ Testando dashboard sem autentica√ß√£o...")
    try:
        response = requests.get(f"{base_url}/dashboard", allow_redirects=False)
        print(f"   Status: {response.status_code}")
        print(f"   URL final: {response.url}")
        
        if response.status_code == 302:
            print("   ‚úÖ Redirecionamento detectado!")
            print(f"   Location: {response.headers.get('Location', 'N/A')}")
        elif response.status_code == 200:
            print("   ‚ùå P√°gina carregou sem redirecionamento")
        else:
            print(f"   ‚ö†Ô∏è Status inesperado: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå Erro: {e}")
    
    # Teste 2: Outras rotas protegidas
    print("\n2Ô∏è‚É£ Testando outras rotas protegidas...")
    protected_routes = ["/accounts", "/transactions", "/users"]
    
    for route in protected_routes:
        try:
            response = requests.get(f"{base_url}{route}", allow_redirects=False)
            print(f"   {route}: {response.status_code}")
            
            if response.status_code == 302:
                print(f"   ‚úÖ {route} redirecionando")
            elif response.status_code == 200:
                print(f"   ‚ùå {route} acess√≠vel sem autentica√ß√£o")
            else:
                print(f"   ‚ö†Ô∏è {route} status {response.status_code}")
                
        except Exception as e:
            print(f"   ‚ùå Erro em {route}: {e}")
    
    # Teste 3: Verificar se h√° JavaScript de redirecionamento
    print("\n3Ô∏è‚É£ Verificando JavaScript de redirecionamento...")
    try:
        response = requests.get(f"{base_url}/dashboard")
        content = response.text.lower()
        
        if "router.push" in content or "router.replace" in content:
            print("   ‚úÖ JavaScript de redirecionamento encontrado")
        elif "login" in content:
            print("   ‚úÖ Refer√™ncia a login encontrada")
        else:
            print("   ‚ùå Nenhum redirecionamento JavaScript encontrado")
            
    except Exception as e:
        print(f"   ‚ùå Erro: {e}")
    
    # Teste 4: Verificar se h√° loading states
    print("\n4Ô∏è‚É£ Verificando loading states...")
    try:
        response = requests.get(f"{base_url}/dashboard")
        content = response.text.lower()
        
        if "carregando" in content or "loading" in content:
            print("   ‚úÖ Loading states encontrados")
        else:
            print("   ‚ùå Loading states n√£o encontrados")
            
    except Exception as e:
        print(f"   ‚ùå Erro: {e}")

if __name__ == "__main__":
    test_route_protection()
