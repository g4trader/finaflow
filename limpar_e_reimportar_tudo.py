#!/usr/bin/env python3
"""
üßπ LIMPEZA TOTAL E REIMPORTA√á√ÉO COMPLETA
Limpar todos os dados e reimportar da planilha corretamente
"""

import requests
import time

BACKEND_URL = "https://finaflow-backend-642830139828.us-central1.run.app"
GOOGLE_SHEET_ID = "1rWMdDhwiNoC7iMycmQGWWDIacrePr1gB7c_mbt1patQ"
CREDENTIALS = {"username": "lucianoterresrosa", "password": "xs95LIa9ZduX"}

print("üéØ LIMPEZA TOTAL E REIMPORTA√á√ÉO")
print("=" * 80)

# Login
response = requests.post(f"{BACKEND_URL}/api/v1/auth/login", data=CREDENTIALS, timeout=10)
token = response.json()["access_token"]
headers = {"Authorization": f"Bearer {token}"}
print("‚úÖ Login realizado\n")

# 0. Limpar Plano de Contas
print("0Ô∏è‚É£ LIMPANDO PLANO DE CONTAS...")
response = requests.post(f"{BACKEND_URL}/api/v1/admin/limpar-plano-contas", headers=headers, timeout=10)
result = response.json()
print(f"   {result['message']}\n")

# 1. Limpar Lan√ßamentos
print("1Ô∏è‚É£ LIMPANDO LAN√áAMENTOS...")
response = requests.post(f"{BACKEND_URL}/api/v1/admin/limpar-via-sql", headers=headers, timeout=10)
result = response.json()
print(f"   {result['message']}\n")

# 2. Limpar Previs√µes
print("2Ô∏è‚É£ LIMPANDO PREVIS√ïES...")
try:
    # Buscar todas
    response = requests.get(f"{BACKEND_URL}/api/v1/lancamentos-previstos", headers=headers, timeout=10)
    if response.status_code == 200:
        previsoes = response.json().get("previsoes", [])
        print(f"   Encontradas {len(previsoes)} previs√µes para remover")
        for prev in previsoes:
            requests.delete(f"{BACKEND_URL}/api/v1/lancamentos-previstos/{prev['id']}", headers=headers, timeout=10)
        print(f"   ‚úÖ {len(previsoes)} previs√µes removidas")
    else:
        print(f"   ‚úÖ Nenhuma previs√£o para remover")
except Exception as e:
    print(f"   ‚ö†Ô∏è Erro ao limpar previs√µes: {str(e)}")

print()

# 3. Verificar limpeza
print("3Ô∏è‚É£ VERIFICANDO LIMPEZA...")
response = requests.get(f"{BACKEND_URL}/api/v1/lancamentos-diarios", headers=headers, timeout=10)
lanc_count = len(response.json()["lancamentos"])
response = requests.get(f"{BACKEND_URL}/api/v1/lancamentos-previstos", headers=headers, timeout=10)
prev_count = len(response.json().get("previsoes", []))
print(f"   Lan√ßamentos: {lanc_count}")
print(f"   Previs√µes: {prev_count}")

if lanc_count == 0 and prev_count == 0:
    print(f"   ‚úÖ Sistema completamente limpo!\n")
else:
    print(f"   ‚ö†Ô∏è Ainda h√° dados no sistema\n")

# 4. Importar Plano de Contas
print("4Ô∏è‚É£ IMPORTANDO PLANO DE CONTAS DA PLANILHA...")
print("   ‚è≥ Aguarde...")
response = requests.post(
    f"{BACKEND_URL}/api/v1/admin/importar-plano-contas-planilha",
    json=import_data,
    headers=headers,
    timeout=60
)

if response.status_code == 200:
    result = response.json()
    if result.get("success"):
        print(f"   ‚úÖ {result['message']}\n")
    else:
        print(f"   ‚ùå Erro: {result.get('message')[:200]}\n")
else:
    print(f"   ‚ùå HTTP {response.status_code}\n")

time.sleep(2)

# 5. Importar Lan√ßamentos
print("5Ô∏è‚É£ IMPORTANDO LAN√áAMENTOS DA PLANILHA...")
print("   ‚è≥ Aguarde 1-2 minutos...")
import_data = {"spreadsheet_id": GOOGLE_SHEET_ID}
response = requests.post(
    f"{BACKEND_URL}/api/v1/admin/importar-lancamentos-planilha",
    json=import_data,
    headers=headers,
    timeout=300
)

if response.status_code == 200:
    result = response.json()
    if result.get("success"):
        print(f"   ‚úÖ {result['message']}\n")
    else:
        print(f"   ‚ùå Erro: {result.get('message')[:200]}\n")
else:
    print(f"   ‚ùå HTTP {response.status_code}\n")

# 6. Importar Previs√µes
print("6Ô∏è‚É£ IMPORTANDO PREVIS√ïES DA PLANILHA...")
print("   ‚è≥ Aguarde 1-2 minutos...")
response = requests.post(
    f"{BACKEND_URL}/api/v1/admin/importar-previsoes-planilha",
    json=import_data,
    headers=headers,
    timeout=300
)

if response.status_code == 200:
    result = response.json()
    if result.get("success"):
        print(f"   ‚úÖ {result['message']}\n")
    else:
        print(f"   ‚ùå Erro: {result.get('message')[:200]}\n")
else:
    print(f"   ‚ùå HTTP {response.status_code}\n")

# 7. Verifica√ß√£o final
print("7Ô∏è‚É£ VERIFICA√á√ÉO FINAL...")
response = requests.get(f"{BACKEND_URL}/api/v1/lancamentos-diarios", headers=headers, timeout=10)
lanc = response.json()["lancamentos"]
response = requests.get(f"{BACKEND_URL}/api/v1/lancamentos-previstos", headers=headers, timeout=10)
prev = response.json().get("previsoes", [])
response = requests.get(f"{BACKEND_URL}/api/v1/lancamentos-diarios/plano-contas", headers=headers, timeout=10)
plano = response.json()

print(f"   Lan√ßamentos: {len(lanc)}")
print(f"   Previs√µes: {len(prev)}")
print(f"   Grupos: {len(plano['grupos'])}")
print(f"   Subgrupos: {len(plano['subgrupos'])}")
print(f"   Contas: {len(plano['contas'])}")

# Tipos
if lanc:
    tipos = {}
    for l in lanc:
        tipos[l["transaction_type"]] = tipos.get(l["transaction_type"], 0) + 1
    print(f"\n   Tipos de lan√ßamentos:")
    for tipo, count in sorted(tipos.items()):
        print(f"      {tipo}: {count}")

print("\n" + "=" * 80)
print("üéâ PROCESSO CONCLU√çDO!")
print("=" * 80)

EOF
